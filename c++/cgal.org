#+title: work with CGAL
#+property: noweb tangle
#+property: header-args :flags -lCGAL -lgmp -L/sw/lib -I/sw/include -I/sw/opt/boost-1_58/include -I~/src/import/cgal/CGAL-4.8.1/

# to get c++, you *enable* C, then *say* C++
# http://orgmode.org/worg/org-contrib/babel/languages/ob-doc-C.html

# www.cems.uvm.edu/~rsnapp/teaching/cs274/src/triangles/triangles.html

#+name: caution
#+begin_src text
CAUTION: The content of this file is automatically generated by Emacs orgmode
from the file triangles.org that should either be in this, or the parent
directory. Consequently, any modifications made to this file will likely be
ephemeral. Please edit cgal.org instead.
#+end_src


#+BEGIN_SRC C++
// <<caution>>

#include <CGAL/Exact_predicates_inexact_constructions_kernel.h>
#include <CGAL/Polygon_2.h>
#include <iostream>
typedef CGAL::Exact_predicates_inexact_constructions_kernel K;
typedef K::Point_2 Point;
typedef CGAL::Polygon_2<K> Polygon_2;
using std::cout; using std::endl;
int main()
{
  Point points[] = { Point(0,0), Point(5.1,0), Point(1,1), Point(0.5,6)};
  Polygon_2 pgn(points, points+4);
  // check if the polygon is simple.
  cout << "The polygon is " <<
    (pgn.is_simple() ? "" : "not ") << "simple." << endl;
  // check if the polygon is convex
  cout << "The polygon is " <<
    (pgn.is_convex() ? "" : "not ") << "convex." << endl;
  cout << pgn << endl;
  return 0;
}
#+END_SRC

#+RESULTS:
| The | polygon | is | simple. |         |   |   |     |   |
| The | polygon | is | not     | convex. |   |   |     |   |
| 4   | 0       | 0  | 5.1     |       0 | 1 | 1 | 0.5 | 6 |



#+name: ch_graham_andrew
#+BEGIN_SRC C++ :cmdline < /Users/minshall/src/import/cgal/CGAL-4.8.1/examples/Convex_hull_2/ch_from_cin_to_cout.cin
#include <CGAL/Exact_predicates_inexact_constructions_kernel.h>
#include <CGAL/ch_graham_andrew.h>

typedef CGAL::Exact_predicates_inexact_constructions_kernel K;
typedef K::Point_2 Point_2;

int main()
{
  CGAL::set_ascii_mode(std::cin);
  CGAL::set_ascii_mode(std::cout);
  std::istream_iterator< Point_2 >  in_start( std::cin );
  std::istream_iterator< Point_2 >  in_end;
  std::ostream_iterator< Point_2 >  out( std::cout, "\n" );
  CGAL::ch_graham_andrew( in_start, in_end, out );
  return 0;
}
#+end_src

#+RESULTS: ch_graham_andrew
|    7 | 3861 |
|   16 | 3750 |
|   39 | 3540 |
|  214 | 2814 |
|  541 | 2072 |
|  601 | 1962 |
| 1004 | 1462 |
| 1549 |  894 |
| 1672 |  801 |
| 1915 |  640 |
| 2314 |  413 |
| 2642 |  269 |
| 3158 |  110 |
| 3487 |   58 |
| 4294 |   23 |
| 4744 |   53 |
| 5887 |  415 |
| 6048 |  499 |
| 6928 | 1142 |
| 7075 | 1306 |
| 7280 | 1548 |
| 7637 | 2051 |
| 8020 | 2942 |
| 8065 | 3113 |
| 8174 | 4474 |
| 8053 | 5151 |
| 7884 | 5617 |
| 7812 | 5808 |
| 7783 | 5877 |
| 7629 | 6167 |
| 7201 | 6764 |
| 7146 | 6828 |
| 6917 | 7037 |
| 5981 | 7731 |
| 5492 | 7943 |
| 5357 | 7992 |
| 4614 | 8158 |
| 4356 | 8170 |
| 3704 | 8171 |
| 3420 | 8123 |
| 2711 | 7939 |
| 2411 | 7824 |
| 2298 | 7773 |
| 1909 | 7558 |
| 1643 | 7366 |
| 1495 | 7247 |
| 1304 | 7087 |
| 1155 | 6936 |
|  910 | 6660 |
|  756 | 6438 |
|  509 | 6045 |
|  406 | 5869 |
|  172 | 5208 |
|  156 | 5153 |
|   32 | 4395 |

here is [[http://homepages.math.uic.edu/~ddumas/teaching/2014/spring/mcs481/cgal-example/][an example]] on how to visualize cgal output using gnuplot.
but, of course, one needs to output something...

#+BEGIN_SRC gnuplot :var data=ch_graham_andrew
set term png
set output "output.png"
set title "Convex Hull"
set size square
set key off
set xrange [-1000:9000]
set yrange [-1000:9000]
plot data w p ls 3, "" w l
#+END_SRC

#+RESULTS:

